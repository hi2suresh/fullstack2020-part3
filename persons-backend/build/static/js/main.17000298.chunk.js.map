{"version":3,"sources":["components/PersonForm.js","services/HandleRest.js","components/Persons.js","components/Filter.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","props","onHandleAdd","onNameChange","onNumberChange","newName","newNumber","onSubmit","onChange","value","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Persons","showThesePersons","setPersons","map","obj","key","name","number","onClick","console","log","window","confirm","HandleRest","Filter","onFilterChange","filterValue","Notification","message","length","messageNotificationClass","toLowerCase","includes","className","App","useState","persons","useEffect","initialPersons","showAll","setShowAll","SetFilterValue","notificationMessage","SetNotificationMessage","setNewName","setNewNumber","filter","person","event","target","preventDefault","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17000298.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const  onHandleAdd = props.onHandleAdd;\r\n    const onNameChange = props.onNameChange;\r\n    const onNumberChange = props.onNumberChange;\r\n    const newName = props.newName;\r\n    const newNumber = props.newNumber;\r\n    return(\r\n        <form onSubmit={onHandleAdd}> \r\n        <div>\r\n          name: <input onChange={onNameChange} value={newName} />\r\n        </div>\r\n        <div>number: <input onChange={onNumberChange} value={newNumber}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n                .then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n         .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n                .then(response => response.data)\r\n}\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n         .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\nimport HandleRest from '../services/HandleRest'\r\n\r\n\r\nconst Persons = ({ showThesePersons, setPersons}) => {\r\n\r\n    const onHandleDelete = (id,name) => {\r\n        console.log(id);   \r\n        if (window.confirm(`Do you really want to delete ${name}?`)) {\r\n            HandleRest.remove(id)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    HandleRest\r\n                    .getAll()\r\n                      .then(response => {\r\n                          setPersons(response)\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showThesePersons.map((obj) => {\r\n                return <p key={obj.name}>{obj.name} {obj.number}\r\n                    <button key={obj.id} onClick={() => onHandleDelete(obj.id,obj.name)}>delete</button> </p>\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({onFilterChange, filterValue}) => {\r\n    return(\r\n        <div>filter shown with <input onChange={onFilterChange} value={filterValue}/></div>\r\n     )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message}) => {\r\n    if (message.length === 0) {\r\n        return null\r\n    }\r\n\r\n    const messageNotificationClass = message.toLowerCase().includes('add');\r\n    return (\r\n        //Set the class name based on add or error message\r\n        <div className={ messageNotificationClass ? 'note' : 'error'}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './PersonForm'\r\nimport Persons from './Persons'\r\nimport Filter from './Filter'\r\nimport Notification from './Notification'\r\nimport HandleRest from '../services/HandleRest'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n\r\n    useEffect(() => {\r\n        HandleRest\r\n          .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n          })\r\n      }, [])\r\n   \r\n    const [showAll, setShowAll] = useState(true);\r\n\r\n    const [filterValue, SetFilterValue] = useState('');\r\n    const onFilterChange = event => {\r\n        SetFilterValue(event.target.value);\r\n        setShowAll(false);\r\n    }\r\n\r\n    const [notificationMessage, SetNotificationMessage] = useState('')\r\n\r\n    let messageClassName = 'note';\r\n\r\n    const onHandleAdd = (event) => {\r\n        event.preventDefault();\r\n        const person = { name: newName, number: newNumber }\r\n            HandleRest.create(person)\r\n                .then((response) => {\r\n                    console.log(\"In Then Block\")\r\n                    console.log(persons);\r\n\r\n                    setPersons(persons.concat(response));\r\n                    SetNotificationMessage(`Added ${person.name}`)\r\n                    showThesePersons = persons;\r\n\r\n                    setTimeout(() => {\r\n                        SetNotificationMessage('')\r\n                    }, 3000)\r\n                })\r\n                .catch(error => {\r\n                    // this is the way to access the error message\r\n                    console.log(\"In Catch Block\")\r\n                    console.log(error.response.data);\r\n                    SetNotificationMessage(error.response.data.error);\r\n                    setTimeout(() => {\r\n                        SetNotificationMessage('')\r\n                    }, 3000)\r\n                  });\r\n                HandleRest\r\n                .getAll()\r\n                  .then(initialPersons => {\r\n                      setPersons(initialPersons)\r\n                })\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setShowAll(true)\r\n    }\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const onNameChange = event => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const onNumberChange = event => setNewNumber(event.target.value)\r\n    // console.log(persons);\r\n\r\n    let showThesePersons = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase()))\r\n    // console.log(showThesePersons);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage}/>\r\n            <Filter onFilterChange={onFilterChange} filterValue={filterValue} />\r\n            <h2>Add a new Name and Number</h2>\r\n            <PersonForm onHandleAdd={onHandleAdd} onNameChange={onNameChange}\r\n                onNumberChange={onNumberChange} newName={newName} newNumber={newNumber} />\r\n            <h2>Numbers</h2>\r\n            <Persons showThesePersons={showThesePersons} setPersons={setPersons} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport axios from 'axios'\r\nimport App from './components/App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}